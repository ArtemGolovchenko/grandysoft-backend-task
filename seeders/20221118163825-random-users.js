'use strict';

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface, Sequelize) {
    const arrMale = [
      "Jacob",
      "Michael",
      "Ethan",
      "Joshua",
      "Daniel",
      "Alexander",
      "Anthony",
      "William",
      "Christopher",
      "Matthew", "Jayden",
      "Andrew",
      "Joseph",
      "David",
      "Noah",
      "Aiden",
      "James",
      "Ryan",
      "Logan",
      "John",
      "Nathan",
      "Elijah",
      "Christian",
      "Gabriel",
      "Benjamin",
      "Jonathan",
      "Tyler",
      "Samuel",
      "Nicholas",
      "Gavin",
      "Dylan",
      "Jackson",
      "Brandon",
      "Caleb",
      "Mason",
      "Angel",
      "Isaac",
      "Evan",
      "Jack",
      "Kevin",
      "Jose",
      "Isaiah",
      "Luke",
      "Landon",
      "Justin",
      "Lucas",
      "Zachary",
      "Jordan",
      "Robert",
      "Aaron",
      "Brayden",
      "Thomas",
      "Cameron",
      "Hunter",
      "Austin",
      "Adrian",
      "Connor",
      "Owen",
      "Aidan",
      "Jason",
      "Julian",
      "Wyatt",
      "Charles",
      "Luis",
      "Carter",
      "Juan",
      "Chase",
      "Diego",
      "Jeremiah",
      "Brody",
      "Xavier",
      "Adam",
      "Carlos",
      "Sebastian",
      "Liam",
      "Hayden",
      "Nathaniel",
      "Henry",
      "Jesus",
      "Ian",
      "Tristan",
      "Bryan",
      "Sean",
      "Cole",
      "Alex",
      "Eric",
      "Brian",
      "Jaden",
      "Carson",
      "Blake",
      "Ayden",
      "Cooper",
      "Dominic",
      "Brady",
      "Caden",
      "Josiah",
      "Kyle",
      "Colton",
      "Kaden",
      "Eli",
      "Miguel",
      "Antonio",
      "Parker",
      "Steven",
      "Alejandro",
      "Riley",
      "Richard",
      "Timothy",
      "Devin",
      "Jesse",
    ];

    const arrFemale = [
      "Emma",
      "Isabella",
      "Emily",
      "Madison",
      "Ava",
      "Olivia",
      "Sophia",
      "Abigail",
      "Elizabeth",
      "Chloe",
      "Samantha",
      "Addison",
      "Natalie",
      "Mia",
      "Alexis",
      "Alyssa",
      "Hannah",
      "Ashley",
      "Ella",
      "Sarah",
      "Grace",
      "Taylor",
      "Brianna",
      "Lily",
      "Hailey",
      "Anna",
      "Victoria",
      "Kayla",
      "Lillian",
      "Lauren",
      "Kaylee",
      "Allison",
      "Savannah",
      "Nevaeh",
      "Gabriella",
      "Sofia",
      "Makayla",
      "Avery",
      "Riley",
      "Julia",
      "Leah",
      "Aubrey",
      "Jasmine",
      "Audrey",
      "Katherine",
      "Morgan",
      "Brooklyn",
      "Destiny",
      "Sydney",
      "Alexa",
      "Kylie",
      "Brooke",
      "Kaitlyn",
      "Evelyn",
      "Layla",
      "Madeline",
      "Kimberly",
      "Zoe",
      "Jessica",
      "Peyton",
      "Alexandra",
      "Claire",
      "Madelyn",
      "Maria",
      "Mackenzie",
      "Arianna",
      "Jocelyn",
      "Amelia",
      "Angelina",
      "Trinity",
      "Andrea",
      "Maya",
      "Valeria",
      "Sophie",
      "Rachel",
      "Vanessa",
      "Aaliyah",
      "Mariah",
      "Gabrielle",
      "Katelyn",
      "Ariana",
      "Bailey",
      "Camila",
      "Jennifer",
      "Melanie",
      "Gianna",
      "Charlotte",
      "Paige",
      "Autumn",
      "Payton",
      "Faith",
      "Sara",
      "Isabelle",
      "Caroline",
      "Genesis",
      "Isabel",
      "Mary",
      "Zoey",
      "Gracie",
      "Megan",
      "Haley",
      "Mya",
      "Michelle",
      "Molly",
      "Stephanie",
      "Nicole",
      "Jenna",
      "Natalia",
      "Sadie",
      "Jada",
    ];

    let arrNames = [];

    function pickRandom(list) {
      return list[Math.floor(Math.random() * list.length)];
    }

    function fetchNames() {
      let i = 200;
      while (i > 0) {
        let nameType = pickRandom(['male', 'female']);
        if (nameType == 'male') {
          let maleName = pickRandom(arrMale);
          if (!arrNames.includes(maleName)) {
            arrNames.push({
              first_name: maleName,
              gender: 'male',
              createdAt: new Date(),
              updatedAt: new Date()
            });
            i--
          } else i++;
        } else if (nameType == 'female') {
          let femaleName = pickRandom(arrFemale);
          if (!arrNames.includes(femaleName)) {
            arrNames.push({
              first_name: femaleName,
              gender: 'female',
              createdAt: new Date(),
              updatedAt: new Date()
            });
            i--;
          } else i++;
        }
      }
    }

    fetchNames();
    return queryInterface.bulkInsert('Users', arrNames);
  },

  async down(queryInterface, Sequelize) {
    return queryInterface.bulkDelete('Users', null, {});
  }
};
